from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Command
from bot.db import SessionLocal, PromoCode, User
from bot.main_core import bot
from bot.config import ROOT_ADMIN_ID
from bot.utils.achievement_checker import check_achievements


async def activate_promo(message: types.Message):
    code = message.get_args().upper()

    if not code:
        return await message.reply("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:\n`/promo CODE`", parse_mode="Markdown")

    uid = message.from_user.id

    with SessionLocal() as s:
        promo = s.query(PromoCode).filter_by(code=code).first()

        if not promo:
            return await message.reply("‚ùå –¢–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        if promo.used_count >= promo.usage_limit:
            return await message.reply("‚ö†Ô∏è –≠—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
        if promo.expire_days is not None:
            from datetime import datetime, timedelta
            created = promo.created_at or datetime.now()
            expires = created + timedelta(days=promo.expire_days)
            if datetime.now() > expires:
                return await message.reply("‚õî –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—Ç—ë–∫")

        # –ü–æ–ª—É—á–∞–µ–º —é–∑–µ—Ä–∞
        user = s.query(User).filter_by(tg_id=uid).first()
        if not user:
            return await message.reply("‚ùó –û—à–∏–±–∫–∞: –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

        # ‚úÖ –ù–∞–≥—Ä–∞–¥–∞
        if promo.reward_type == "money":
            user.balance += int(promo.reward_value)
            reward_text = f"üí∞ +{promo.reward_value}"
        else:
            # Roblox item (–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
            reward_text = f"üéÅ Roblox item ID {promo.reward_value}"
            # TODO: Roblox delivery later

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫
        promo.used_count += 1
        s.commit()

        # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        check_achievements(user)

    await message.reply(f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n–í—ã –ø–æ–ª—É—á–∏–ª–∏: {reward_text}")

    # ‚úÖ –£–≤–µ–¥–æ–º–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    try:
        await bot.send_message(
            ROOT_ADMIN_ID,
            f"üéü –ü—Ä–æ–º–æ–∫–æ–¥ <code>{code}</code> –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª @{message.from_user.username}\n"
            f"–í—ã–¥–∞–Ω–æ: {reward_text}",
            parse_mode="HTML"
        )
    except:
        pass


def register_promo(dp: Dispatcher):
    dp.register_message_handler(activate_promo, Command("promo"))
