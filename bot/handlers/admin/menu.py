from aiogram import types, Dispatcher

from bot.db import SessionLocal, Admin
from bot.keyboards.admin_keyboards import admin_main_menu_kb

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def is_admin(uid: int) -> bool:
    with SessionLocal() as s:
        return bool(s.query(Admin).filter_by(telegram_id=uid).first())

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
async def admin_panel(message: types.Message):
    if not is_admin(message.from_user.id):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞")

    await message.answer(
        "üëë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
        reply_markup=admin_main_menu_kb()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–∞–Ω–µ–ª–∏ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∏)
async def admin_menu_callbacks(call: types.CallbackQuery):
    if not is_admin(call.from_user.id):
        return await call.answer("‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)

    if call.data == "back_to_menu":
        await call.message.edit_text(
            "üëë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
            reply_markup=admin_main_menu_kb(),
        )
    elif call.data == "admin_logs":
        await call.message.edit_text(
            "üìú –†–∞–∑–¥–µ–ª –ª–æ–≥–æ–≤ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ.",
            reply_markup=admin_main_menu_kb(),
        )

    await call.answer()

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def register_admin_menu(dp: Dispatcher):
    dp.register_message_handler(admin_panel, commands=["admin"])
    dp.register_callback_query_handler(
        admin_menu_callbacks,
        lambda c: c.data in {"admin_logs", "back_to_menu"},
    )
